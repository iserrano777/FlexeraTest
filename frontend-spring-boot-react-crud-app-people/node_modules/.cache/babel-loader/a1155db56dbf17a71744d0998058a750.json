{"ast":null,"code":"var _jsxFileName = \"/Users/equipo/tutorials/examples/frontend-spring-boot-react-crud-app-people/src/Component/PeopleComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PeopleDataService from '../service/PeopleDataService';\n\nclass PeopleComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      description: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    PeopleDataService.retrievePerson(this.state.id).then(response => this.setState({\n      description: response.data.description\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = 'Enter a Description';\n    } else if (values.description.length < 5) {\n      errors.description = 'Enter atleast 5 Characters in Description';\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let People = {\n      id: this.state.id,\n      description: values.description,\n      targetDate: values.targetDate\n    };\n\n    if (this.state.id === -1) {\n      PeopleDataService.createPerson(person).then(() => this.props.history.push('/people'));\n    } else {\n      PeopleDataService.updatePerson(this.state.id, person).then(() => this.props.history.push('/people'));\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    let _this$state = this.state,\n        description = _this$state.description,\n        id = _this$state.id;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Person\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        id,\n        description\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default PeopleComponent;","map":{"version":3,"sources":["/Users/equipo/tutorials/examples/frontend-spring-boot-react-crud-app-people/src/Component/PeopleComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","PeopleDataService","PeopleComponent","constructor","props","state","id","match","params","description","onSubmit","bind","validate","componentDidMount","console","log","retrievePerson","then","response","setState","data","values","errors","length","People","targetDate","createPerson","person","history","push","updatePerson","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PeopleDataService from '../service/PeopleDataService';\n\n\n\nclass PeopleComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: ''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        PeopleDataService.retrievePerson(this.state.id)\n            .then(response => this.setState({\n                description: response.data.description\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n\n        let People = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            PeopleDataService.createPerson(person)\n                .then(() => this.props.history.push('/people'))\n        } else {\n            PeopleDataService.updatePerson(this.state.id, person)\n                .then(() => this.props.history.push('/people'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, id } = this.state\n\n        return (\n            <div>\n                <h3>Person</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, description }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PeopleComponent"]},"metadata":{},"sourceType":"module"}