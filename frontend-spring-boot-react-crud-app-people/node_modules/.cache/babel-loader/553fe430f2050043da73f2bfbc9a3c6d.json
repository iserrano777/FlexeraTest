{"ast":null,"code":"var _jsxFileName = \"/Users/equipo/tutorials/examples/frontend-spring-boot-react-crud-app-people/src/Component/PeopleComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PeopleDataService from '../service/PeopleDataService';\n\nclass PeopleComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      personname: '',\n      age: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    PeopleDataService.retrievePerson(this.state.id).then(response => this.setState({\n      personname: response.data.personname,\n      age: response.data.age,\n      balance: response.data.balance\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.personname) {\n      errors.personname = 'Enter a Name';\n    } else if (values.personname.length < 0) {\n      errors.description = 'Enter a Name';\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let person = {\n      id: this.state.id,\n      personname: values.personname,\n      age: values.age,\n      balance: values.balance,\n      targetDate: values.targetDate\n    };\n\n    if (this.state.id === -1) {\n      PeopleDataService.createPerson(person).then(() => this.props.history.push('/people'));\n    } else {\n      PeopleDataService.updatePerson(this.state.id, person).then(() => this.props.history.push('/people'));\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    let _this$state = this.state,\n        personname = _this$state.personname,\n        age = _this$state.age,\n        balance = _this$state.balance,\n        id = _this$state.id;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Person\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        id,\n        age,\n        balance,\n        personname\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"personname\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"personname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Age\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Balance\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"balance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default PeopleComponent;","map":{"version":3,"sources":["/Users/equipo/tutorials/examples/frontend-spring-boot-react-crud-app-people/src/Component/PeopleComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","PeopleDataService","PeopleComponent","constructor","props","state","id","match","params","personname","age","onSubmit","bind","validate","componentDidMount","console","log","retrievePerson","then","response","setState","data","balance","values","errors","length","description","person","targetDate","createPerson","history","push","updatePerson","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PeopleDataService from '../service/PeopleDataService';\n\n\n\nclass PeopleComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            personname: '',\n            age: ''\n            \n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    \n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        PeopleDataService.retrievePerson(this.state.id)\n            .then(response => this.setState({\n                personname: response.data.personname,\n                age: response.data.age,\n                balance: response.data.balance\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.personname) {\n            errors.personname = 'Enter a Name'\n        } else if (values.personname.length < 0) {\n            errors.description = 'Enter a Name'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n\n        let person = {\n            id: this.state.id,\n            personname: values.personname,\n            age: values.age,\n            balance: values.balance,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            PeopleDataService.createPerson(person)\n                .then(() => this.props.history.push('/people'))\n        } else {\n            PeopleDataService.updatePerson(this.state.id, person)\n                .then(() => this.props.history.push('/people'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { personname, age, balance, id } = this.state\n\n        return (\n            <div>\n                <h3>Person</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, age, balance, personname }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"personname\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Name</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"personname\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Age</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"age\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Balance</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"balance\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Email</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Address</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"address\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PeopleComponent"]},"metadata":{},"sourceType":"module"}